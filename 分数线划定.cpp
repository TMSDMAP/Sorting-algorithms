/*
题目描述
世博会志愿者的选拔工作正在 A 市如火如荼的进行。为了选拔最合适的人才，A 市对所有报名的选手进行了笔试，笔试分数达到面试分数线的选手方可进入面试。面试分数线根据计划录取人数的
150% 划定，即如果计划录取m 名志愿者，则面试分数线为排名第m×150%（向下取整）名的选手的分数，而最终进入面试的选手为笔试成绩不低于面试分数线的所有选手。

现在就请你编写程序划定面试分数线，并输出所有进入面试的选手的报名号和笔试成绩。

输入格式
第一行，两个整数n,m(5≤n≤5000,3≤m≤n)，中间用一个空格隔开，其中n 表示报名参加笔试的选手总数，m 表示计划录取的志愿者人数。输入数据保证m×150% 向下取整后小于等于n。

第二行到第n+1 行，每行包括两个整数，中间用一个空格隔开，分别是选手的报名号k(1000≤k≤9999)和该选手的笔试成绩s(1≤s≤100)。数据保证选手的报名号各不相同。

输出格式
第一行，有2 个整数，用一个空格隔开，第一个整数表示面试分数线；第二个整数为进入面试的选手的实际人数。
从第二行开始，每行包含2个整数，中间用一个空格隔开，分别表示进入面试的选手的报名号和笔试成绩，按照笔试成绩从高到低输出，如果成绩相同，则按报名号由小到大的顺序输出。*/
#include <iostream>
#include <algorithm>
#include <cmath>
using namespace std;
struct Player {
	int k;
	int s;
};
bool compare(const Player& s1, const Player& s2)
{
	return s1.s > s2.s||(s1.s==s2.s&&s1.k<s2.k);
}		//sort真香
int main()
{
	int n, m;
	Player a[5000];
	cin >> n >> m;
	for (int i = 0; i < n; i++)
		cin >> a[i].k >> a[i].s;
	sort(a, a + n, compare);
	int p = floor(1.5 * m);
	int x = a[p-1].s;
	int sum = 0;
	for (int i = 0; i < n; i++)
	{
		if (a[i].s >= x)
			sum++;
	}
	cout << x << " " << sum << endl;
	for (int j = 0; j < sum; j++)
		cout << a[j].k << " " << a[j].s << endl;
}